name: main
permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Build - no features
        run: cargo build --verbose --all-targets --no-default-features
      - name: Build - std
        run: cargo build --verbose --all-targets --no-default-features --features std
      - name: Build - serde
        run: cargo build --verbose --all-targets --no-default-features --features serde
      - name: Build - macros
        run: cargo build --verbose --all-targets --no-default-features --features macros
      - name: Build - emit
        run: cargo build --verbose --all-targets --no-default-features --features emit
      - name: Tests
        run: cargo test --verbose
      - name: Doc Tests
        run: cargo test --doc --verbose
      - name: Doc
        run: cargo doc --all-features
      - name: Delete Cargo.lock
        run: rm Cargo.lock
      - name: Publish Dry-Run
        run: cargo publish -p frozen-collections-core --dry-run

  analysis:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable
      - name: Install Clippy
        run: rustup component add clippy
      - name: Install RustFmt
        run: rustup component add rustfmt
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Check
        run: cargo check --all-targets --all-features
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Audit
        run: cargo audit
      - name: Format
        run: cargo fmt -- --check

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: lcov.info
          fail_ci_if_error: true
