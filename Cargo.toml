[workspace]
resolver = "3"
members = [
    "frozen-collections",
    "frozen-collections-core",
    "frozen-collections-macros",
    "codegen",
    "srcgen"
]

[workspace.package]
version = "0.7.0"
edition = "2024"
categories = ["data-structures", "no-std"]
keywords = ["map", "set", "collection"]
repository = "https://github.com/geeknoid/frozen-collections"
license = "MIT"
authors = ["Martin Taillefer <martin@taillefer.org>"]
readme = "README.md"
rust-version = "1.87.0"

[workspace.dependencies]
frozen-collections = { version = "0.7.0", path = "frozen-collections", default-features = false }
frozen-collections-core = { version = "0.7.0", path = "frozen-collections-core", default-features = false }
frozen-collections-macros = { version = "0.7.0", path = "frozen-collections-macros", default-features = false }

const-random = "0.1.18"
criterion = "0.6.0"
equivalent = "1.0.2"
foldhash = { version = "0.1.5", default-features = false }
hashbrown = { version = "0.15.3", default-features = false }
mutants = "0.0.3"
proc-macro-error2 = "2.0.1"
proc-macro2 = "1.0.95"
quote = "1.0.40"
rand = "0.9.1"
rand_chacha = "0.9.0"
serde = { version = "1.0.219", default-features = false }
serde_json = "1.0.140"
syn = { version = "2.0.101", default-features = false }

[workspace.lints.rust]
ambiguous_negative_literals = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
redundant_imports = "warn"
redundant_lifetimes = "warn"
single_use_lifetimes = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
unused_results = "warn"

[workspace.lints.clippy]
cargo = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }

# Explicitly enabled lints from the `restriction` group.
alloc_instead_of_core = "warn"
allow_attributes_without_reason = "warn"
as_underscore = "warn"
as_pointer_underscore = "warn"
clone_on_ref_ptr = "warn"
deref_by_slicing = "warn"
disallowed_script_idents = "warn"
empty_drop = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
filetype_is_file = "warn"
fn_to_numeric_cast_any = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
infinite_loop = "warn"
map_err_ignore = "warn"
missing_asserts_for_indexing = "warn"
multiple_unsafe_ops_per_block = "warn"
mutex_atomic = "warn"
mutex_integer = "warn"
needless_raw_strings = "warn"
print_stderr = "warn"
print_stdout = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
semicolon_outside_block = "warn"
std_instead_of_core = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unused_result_ok = "warn"
unwrap_in_result = "warn"

# turn off annoying ones...
too_many_lines = "allow"
from-iter-instead-of-collect = "allow"
cognitive_complexity = "allow"

[profile.bench]
codegen-units = 1
lto = "fat"

[profile.release]
codegen-units = 1
lto = "fat"
debug = true
strip = "none"
